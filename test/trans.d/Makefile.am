COLM_BIN = ../../src/colm

COLM_xCPPFLAGS = -I../../src/include
COLM_xLDADD = ../../src/libcolm.la

check_PROGRAMS = trans

EXTRA_DIST = \
	gentests \
	ragel.lm \
	ragel-c.lm \
	ragel-crack.lm \
	ragel-ocaml.lm \
	ragel-ruby.lm \
	trans-asm.lm \
	trans-c.lm \
	trans-crack.lm \
	trans-csharp.lm \
	trans-d.lm \
	trans-go.lm \
	trans-java.lm \
	trans-julia.lm \
	trans.lm \
	trans-ocaml.lm \
	trans-ruby.lm \
	trans-rust.lm \
	$(CASES)

trans.c: trans.lm $(TRANS_DEPS) $(COLM_BIN)
	$(COLM_BIN) -b trans_object -c -o $@ -I$(srcdir) $<

trans_CPPFLAGS = $(COLM_xCPPFLAGS)
trans_SOURCES = actparams.cc trans.c main.c
trans_LDADD = $(COLM_xLDADD)
trans_LDFLAGS = -static

CASES =  \
	case/any1_asm.rl \
	case/any1_crack.rl \
	case/any1_c.rl \
	case/any1_cs.rl \
	case/any1_d.rl \
	case/any1_go.rl \
	case/any1_java.rl \
	case/any1_julia.rl \
	case/any1_ocaml.rl \
	case/any1.rl \
	case/any1_ruby.rl \
	case/any1_rust.rl \
	case/atoi1_asm.rl \
	case/atoi1_crack.rl \
	case/atoi1_c.rl \
	case/atoi1_cs.rl \
	case/atoi1_d.rl \
	case/atoi1_go.rl \
	case/atoi1_java.rl \
	case/atoi1_julia.rl \
	case/atoi1_ocaml.rl \
	case/atoi1.rl \
	case/atoi1_ruby.rl \
	case/atoi1_rust.rl \
	case/atoi2_asm.rl \
	case/atoi2_crack.rl \
	case/atoi2_c.rl \
	case/atoi2_cs.rl \
	case/atoi2_d.rl \
	case/atoi2_go.rl \
	case/atoi2_java.rl \
	case/atoi2_julia.rl \
	case/atoi2_ocaml.rl \
	case/atoi2.rl \
	case/atoi2_ruby.rl \
	case/atoi2_rust.rl \
	case/call4_asm.rl \
	case/call4_crack.rl \
	case/call4_c.rl \
	case/call4_cs.rl \
	case/call4_d.rl \
	case/call4_go.rl \
	case/call4_java.rl \
	case/call4_julia.rl \
	case/call4.rl \
	case/call4_rust.rl \
	case/caseindep_asm.rl \
	case/caseindep_crack.rl \
	case/caseindep_c.rl \
	case/caseindep_cs.rl \
	case/caseindep_d.rl \
	case/caseindep_go.rl \
	case/caseindep_java.rl \
	case/caseindep_julia.rl \
	case/caseindep_ocaml.rl \
	case/caseindep.rl \
	case/caseindep_ruby.rl \
	case/caseindep_rust.rl \
	case/clang4_asm.rl \
	case/clang4_crack.rl \
	case/clang4_c.rl \
	case/clang4_cs.rl \
	case/clang4_d.rl \
	case/clang4_go.rl \
	case/clang4_java.rl \
	case/clang4_julia.rl \
	case/clang4_ocaml.rl \
	case/clang4.rl \
	case/clang4_ruby.rl \
	case/clang4_rust.rl \
	case/cond1_asm.rl \
	case/cond1_crack.rl \
	case/cond1_c.rl \
	case/cond1_cs.rl \
	case/cond1_d.rl \
	case/cond1_go.rl \
	case/cond1_java.rl \
	case/cond1_julia.rl \
	case/cond1_ocaml.rl \
	case/cond1.rl \
	case/cond1_ruby.rl \
	case/cond1_rust.rl \
	case/cond7_asm.rl \
	case/cond7_crack.rl \
	case/cond7_c.rl \
	case/cond7_cs.rl \
	case/cond7_d.rl \
	case/cond7_go.rl \
	case/cond7_java.rl \
	case/cond7_julia.rl \
	case/cond7_ocaml.rl \
	case/cond7.rl \
	case/cond7_ruby.rl \
	case/cond7_rust.rl \
	case/cppscan6_asm.rl \
	case/cppscan6_crack.rl \
	case/cppscan6_c.rl \
	case/cppscan6_cs.rl \
	case/cppscan6_d.rl \
	case/cppscan6_go.rl \
	case/cppscan6_java.rl \
	case/cppscan6_julia.rl \
	case/cppscan6_ocaml.rl \
	case/cppscan6.rl \
	case/cppscan6_ruby.rl \
	case/cppscan6_rust.rl \
	case/curs1_asm.rl \
	case/curs1_crack.rl \
	case/curs1_c.rl \
	case/curs1_cs.rl \
	case/curs1_d.rl \
	case/curs1_go.rl \
	case/curs1_java.rl \
	case/curs1_julia.rl \
	case/curs1_ocaml.rl \
	case/curs1.rl \
	case/curs1_ruby.rl \
	case/curs1_rust.rl \
	case/empty1_asm.rl \
	case/empty1_crack.rl \
	case/empty1_c.rl \
	case/empty1_cs.rl \
	case/empty1_d.rl \
	case/empty1_go.rl \
	case/empty1_java.rl \
	case/empty1_julia.rl \
	case/empty1_ocaml.rl \
	case/empty1.rl \
	case/empty1_ruby.rl \
	case/empty1_rust.rl \
	case/eofact_asm.rl \
	case/eofact_crack.rl \
	case/eofact_c.rl \
	case/eofact_cs.rl \
	case/eofact_d.rl \
	case/eofact_go.rl \
	case/eofact_java.rl \
	case/eofact_julia.rl \
	case/eofact_ocaml.rl \
	case/eofact.rl \
	case/eofact_ruby.rl \
	case/eofact_rust.rl \
	case/erract2_asm.rl \
	case/erract2_crack.rl \
	case/erract2_c.rl \
	case/erract2_cs.rl \
	case/erract2_d.rl \
	case/erract2_go.rl \
	case/erract2_java.rl \
	case/erract2_julia.rl \
	case/erract2_ocaml.rl \
	case/erract2.rl \
	case/erract2_ruby.rl \
	case/erract2_rust.rl \
	case/goto1_asm.rl \
	case/goto1_crack.rl \
	case/goto1_c.rl \
	case/goto1_cs.rl \
	case/goto1_d.rl \
	case/goto1_go.rl \
	case/goto1_java.rl \
	case/goto1_julia.rl \
	case/goto1.rl \
	case/goto1_rust.rl \
	case/gotocallret1_asm.rl \
	case/gotocallret1_crack.rl \
	case/gotocallret1_c.rl \
	case/gotocallret1_cs.rl \
	case/gotocallret1_d.rl \
	case/gotocallret1_go.rl \
	case/gotocallret1_java.rl \
	case/gotocallret1_julia.rl \
	case/gotocallret1.rl \
	case/gotocallret1_rust.rl \
	case/gotocallret2_asm.rl \
	case/gotocallret2_crack.rl \
	case/gotocallret2_c.rl \
	case/gotocallret2_cs.rl \
	case/gotocallret2_d.rl \
	case/gotocallret2_go.rl \
	case/gotocallret2_java.rl \
	case/gotocallret2_julia.rl \
	case/gotocallret2.rl \
	case/gotocallret2_rust.rl \
	case/gotocallret3_asm.rl \
	case/gotocallret3_crack.rl \
	case/gotocallret3_c.rl \
	case/gotocallret3_cs.rl \
	case/gotocallret3_d.rl \
	case/gotocallret3_go.rl \
	case/gotocallret3_java.rl \
	case/gotocallret3_julia.rl \
	case/gotocallret3_ocaml.rl \
	case/gotocallret3.rl \
	case/gotocallret3_ruby.rl \
	case/gotocallret3_rust.rl \
	case/ncall1_asm.rl \
	case/ncall1_crack.rl \
	case/ncall1_c.rl \
	case/ncall1_cs.rl \
	case/ncall1_d.rl \
	case/ncall1_go.rl \
	case/ncall1_java.rl \
	case/ncall1_julia.rl \
	case/ncall1_ocaml.rl \
	case/ncall1.rl \
	case/ncall1_ruby.rl \
	case/ncall1_rust.rl \
	case/next1_asm.rl \
	case/next1_crack.rl \
	case/next1_c.rl \
	case/next1_cs.rl \
	case/next1_d.rl \
	case/next1_go.rl \
	case/next1_java.rl \
	case/next1_julia.rl \
	case/next1_ocaml.rl \
	case/next1.rl \
	case/next1_ruby.rl \
	case/next1_rust.rl \
	case/next2_asm.rl \
	case/next2_crack.rl \
	case/next2_c.rl \
	case/next2_cs.rl \
	case/next2_d.rl \
	case/next2_go.rl \
	case/next2_java.rl \
	case/next2_julia.rl \
	case/next2_ocaml.rl \
	case/next2.rl \
	case/next2_ruby.rl \
	case/next2_rust.rl \
	case/patact_asm.rl \
	case/patact_crack.rl \
	case/patact_c.rl \
	case/patact_cs.rl \
	case/patact_d.rl \
	case/patact_go.rl \
	case/patact_java.rl \
	case/patact_julia.rl \
	case/patact_ocaml.rl \
	case/patact.rl \
	case/patact_ruby.rl \
	case/patact_rust.rl \
	case/rangei_asm.rl \
	case/rangei_crack.rl \
	case/rangei_c.rl \
	case/rangei_cs.rl \
	case/rangei_d.rl \
	case/rangei_go.rl \
	case/rangei_java.rl \
	case/rangei_julia.rl \
	case/rangei_ocaml.rl \
	case/rangei.rl \
	case/rangei_ruby.rl \
	case/rangei_rust.rl \
	case/scan1_asm.rl \
	case/scan1_crack.rl \
	case/scan1_c.rl \
	case/scan1_cs.rl \
	case/scan1_d.rl \
	case/scan1_go.rl \
	case/scan1_java.rl \
	case/scan1_julia.rl \
	case/scan1_ocaml.rl \
	case/scan1.rl \
	case/scan1_ruby.rl \
	case/scan1_rust.rl \
	case/scan2_asm.rl \
	case/scan2_crack.rl \
	case/scan2_c.rl \
	case/scan2_cs.rl \
	case/scan2_d.rl \
	case/scan2_go.rl \
	case/scan2_java.rl \
	case/scan2_julia.rl \
	case/scan2_ocaml.rl \
	case/scan2.rl \
	case/scan2_ruby.rl \
	case/scan2_rust.rl \
	case/scan3_asm.rl \
	case/scan3_crack.rl \
	case/scan3_c.rl \
	case/scan3_cs.rl \
	case/scan3_d.rl \
	case/scan3_go.rl \
	case/scan3_java.rl \
	case/scan3_julia.rl \
	case/scan3_ocaml.rl \
	case/scan3.rl \
	case/scan3_ruby.rl \
	case/scan3_rust.rl \
	case/scan4_asm.rl \
	case/scan4_crack.rl \
	case/scan4_c.rl \
	case/scan4_cs.rl \
	case/scan4_d.rl \
	case/scan4_go.rl \
	case/scan4_java.rl \
	case/scan4_julia.rl \
	case/scan4_ocaml.rl \
	case/scan4.rl \
	case/scan4_ruby.rl \
	case/scan4_rust.rl \
	case/stateact1_asm.rl \
	case/stateact1_crack.rl \
	case/stateact1_c.rl \
	case/stateact1_cs.rl \
	case/stateact1_d.rl \
	case/stateact1_go.rl \
	case/stateact1_java.rl \
	case/stateact1_julia.rl \
	case/stateact1_ocaml.rl \
	case/stateact1.rl \
	case/stateact1_ruby.rl \
	case/stateact1_rust.rl \
	case/targs1_asm.rl \
	case/targs1_crack.rl \
	case/targs1_c.rl \
	case/targs1_cs.rl \
	case/targs1_d.rl \
	case/targs1_go.rl \
	case/targs1_java.rl \
	case/targs1_julia.rl \
	case/targs1_ocaml.rl \
	case/targs1.rl \
	case/targs1_ruby.rl \
	case/targs1_rust.rl \
	case/zlen1_asm.rl \
	case/zlen1_crack.rl \
	case/zlen1_c.rl \
	case/zlen1_cs.rl \
	case/zlen1_d.rl \
	case/zlen1_go.rl \
	case/zlen1_java.rl \
	case/zlen1_julia.rl \
	case/zlen1_ocaml.rl \
	case/zlen1.rl \
	case/zlen1_ruby.rl \
	case/zlen1_rust.rl

CLEANFILES = trans.c

clean-local:
	rm -Rf working
	if test '$(builddir)' != '$(srcdir)'; then \
		rm -Rf case; \
		rm -f gentests; \
	fi

check-local:
	if test '$(builddir)' != '$(srcdir)'; then \
		$(LN_S) -f '$(srcdir)/gentests' '$(srcdir)/case' '$(builddir)'; \
	fi
	'$(top_srcdir)/test/runtests'
